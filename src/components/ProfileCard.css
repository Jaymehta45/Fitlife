/* ProfileCard.css
   Editable variables below control the card size, avatar, and spacing.
   Change values here first. Other rules use these variables.
*/

:root {
  /* CARD SIZE / PROPORTIONS -------------------------------------------
     --card-height-vh  : primary card height as viewport height (svh on mobile)
     --card-max-height : maximum height in px
     --card-max-width  : maximum width of the card wrapper
     --card-aspect     : aspect ratio fallback (can be 'auto' or number like 0.72)
  ---------------------------------------------------------------------*/
  --card-height-vh: 102svh;       /* change to make card taller/shorter (use svh for mobile-safe) */
  --card-max-height: 650px;      /* cap card height */
  --card-max-width: 2000px;       /* wrapper max width */
  --card-aspect: 0.82;           /* aspect ratio used where needed */

  /* CARD RADIUS / SHADOW ------------------------------------------------*/
  --card-radius: 58px;           /* border radius of card */
  --card-shadow-blur: 4px;       /* shadow blur amount */

  /* AVATAR SIZING -------------------------------------------------------*/
  --avatar-max-height: 112vh;     /* how tall the avatar image can be inside the card */
  --mini-avatar-size: 72px;      /* size of the round mini avatar in the info bar */

  /* TYPOGRAPHY (use clamp for responsive scaling) ------------------------*/
  --title-min: 1.2rem;
  --title-pref-vw: 4.5vw;
  --title-max: 2.6rem;

  --subtitle-min: 0.85rem;
  --subtitle-pref-vw: 2vw;
  --subtitle-max: 1rem;

  /* USER INFO PANEL -----------------------------------------------------*/
  --user-info-height: auto;
  --user-info-padding: 10px 12px;

  /* TILT / MOTION ------------------------------------------------------*/
  --perspective: 800px;          /* greater -> subtler tilt */
  --card-opacity-on-hover: 1;
}

/* WRAPPER ---------------------------------------------------------------*/
.pc-card-wrapper {
  perspective: var(--perspective);
  transform: translate3d(0, 0, 0.1px); /* remove offsets so card aligns with column */
  position: relative;
  touch-action: none;
  width: 100%;                /* fills the parent column */
  max-width: var(--card-max-width);
  margin: 0 auto;
}

/* decorative blurred background behind card (gradient comes from inline style) */
.pc-card-wrapper::before {
  content: '';
  position: absolute;
  inset: -10px;
  background: inherit;
  background-position: inherit;
  border-radius: inherit;
  transition: all 0.45s ease;
  filter: contrast(2) saturate(2) blur(36px);
  transform: scale(0.9) translate3d(0, 0, 0.1px);
  background-size: 100% 100%;
  background-image: var(--behind-gradient);
  z-index: 0;
}

.pc-card-wrapper:hover,
.pc-card-wrapper.active {
  --card-opacity: var(--card-opacity-on-hover);
}

.pc-card-wrapper:hover::before,
.pc-card-wrapper.active::before {
  filter: contrast(1) saturate(2) blur(40px) opacity(1);
  transform: scale(0.97) translate3d(0, 0, 0.1px);
}

/* CARD ---------------------------------------------------------------*/
/* Main size rules. Adjust --card-height-vh and --card-max-height variables above. */
.pc-card {
  height: min(var(--card-height-vh), var(--card-max-height)); /* primary control */
  max-height: var(--card-max-height);
  width: 100%;
  left: 0;
  position: relative;
  display: grid;
  border-radius: var(--card-radius);
  background-blend-mode: color-dodge, normal, normal, normal;
  animation: glow-bg 12s linear infinite;
  box-shadow: rgba(0, 0, 0, 0.45) calc((var(--pointer-from-left) * 2px) - 0.5px) calc((var(--pointer-from-top) * 4px) - 1px) var(--card-shadow-blur) -1px;
  transition: transform 0.6s ease;
  transform: translate3d(0, 0, 0.1px) rotateX(0deg) rotateY(0deg);
  background-size: 100% 100%;
  background-position: 0 0, 0 0, 50% 50%, 0 0;
  background-image: radial-gradient(farthest-side circle at var(--pointer-x) var(--pointer-y), rgba(255,255,255,var(--card-opacity)) 4%, rgba(255,255,255,calc(var(--card-opacity)*0.75)) 10%, rgba(255,255,255,calc(var(--card-opacity)*0.5)) 50%, rgba(255,255,255,0) 100%), radial-gradient(35% 52% at 55% 20%, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0) 100%), radial-gradient(100% 100% at 50% 50%, rgba(0,0,0,0.05) 1%, rgba(0,0,0,0) 76%), linear-gradient(from 124deg at 50% 50%, rgba(0,0,0,0.1) 0%, rgba(255,255,255,0.1) 40%, rgba(255,255,255,0.1) 60%, rgba(0,0,0,0.1) 100%);
  overflow: hidden;
  z-index: 2;
}

/* tilt transform when active */
.pc-card:hover,
.pc-card.active {
  transition: none;
  transform: translate3d(0, 0, 0.1px) rotateX(var(--rotate-y)) rotateY(var(--rotate-x));
}

/* unify children layout */
.pc-card * {
  display: grid;
  grid-area: 1/-1;
  border-radius: var(--card-radius);
  transform: translate3d(0, 0, 0.1px);
  pointer-events: none;
}

/* INNER LAYERS -----------------------------------------------------*/
.pc-inside {
  inset: 0;
  position: absolute;
  background-image: var(--inner-gradient);
  background-color: rgba(0, 0, 0, 0.9);
  transform: translate3d(0, 0, 0.01px);
  z-index: 3;
}

/* shine/glare decorative layers (leave unless you want to remove) */
.pc-shine { z-index: 4; mix-blend-mode: color-dodge; animation: holo-bg 18s linear infinite; pointer-events: none; }
.pc-glare { z-index: 5; mix-blend-mode: overlay; pointer-events: none; }

/* AVATAR CONTENT --------------------------------------------------*/
.pc-avatar-content {
  mix-blend-mode: screen;
  overflow: hidden;
  z-index: 4;
}

/* Avatar sizing.
   Adjust --avatar-max-height for how tall the image can get.
   If you increase card height drastically, increase this too.
*/
.pc-avatar-content .avatar {
  width: 100%;
  height: 100%;
  max-height: var(--avatar-max-height);
  position: absolute;
  left: 50%;
  transform: translateX(-50%) scale(1);
  bottom: 0;
  top: 0;
  object-fit: cover;
  opacity: calc(1.75 - var(--pointer-from-center)); /* visual fade on tilt */
  filter: grayscale(100%) contrast(1.2); /* Convert to black and white with enhanced contrast */
}

/* user info overlay at the bottom of the card.
   Change --user-info-padding or mini-avatar-size variables above.
*/
.pc-user-info {
  position: absolute;
  bottom: 20px;
  left: 20px;
  right: 20px;
  z-index: 6;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: rgba(255,255,255,0.06);
  backdrop-filter: blur(18px);
  border: 1px solid rgba(255,255,255,0.06);
  border-radius: 14px;
  padding: var(--user-info-padding);
  pointer-events: auto;
}

/* mini avatar */
.pc-mini-avatar {
  width: var(--mini-avatar-size);
  height: var(--mini-avatar-size);
  border-radius: 50%;
  overflow: hidden;
  border: 1px solid rgba(255,255,255,0.08);
  flex-shrink: 0;
  filter: grayscale(100%) contrast(1.2); /* Convert to black and white with enhanced contrast */
}

/* text sizes inside user info */
.pc-handle { font-size: 14px; font-weight: 500; color: rgba(255,255,255,0.95); line-height: 1; }
.pc-status { font-size: 13px; color: rgba(255,255,255,0.75); line-height: 1; }

/* contact button styles */
.pc-contact-btn {
  border: 1px solid rgba(255,255,255,0.08);
  border-radius: 10px;
  padding: 8px 12px;
  font-size: 13px;
  font-weight: 600;
  color: rgba(255,255,255,0.95);
  cursor: pointer;
  transition: all 0.16s ease;
  backdrop-filter: blur(8px);
  pointer-events: auto;
}

/* MAIN CONTENT (title + subtitle) ----------------------------------*/
/* center the title block and scale text using clamp() variables above */
.pc-content {
  max-height: 100%;
  overflow: hidden;
  text-align: center;
  position: relative;
  transform: translate3d(calc(var(--pointer-from-left) * -6px + 3px), calc(var(--pointer-from-top) * -6px + 3px), 0.1px) !important;
  z-index: 7;
  mix-blend-mode: luminosity;
}

.pc-details {
  width: 100%;
  position: absolute;
  top: 1.2em; /* move title down from top, change if you increase card height */
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Title. Change clamp parameters above if you want different scaling */
.pc-details h3 {
  font-weight: 600;
  margin: 0;
  font-size: clamp(var(--title-min), var(--title-pref-vw), var(--title-max));
  background-image: linear-gradient(to bottom, #000, #333);
  -webkit-text-fill-color: transparent;
  background-clip: text;
  -webkit-background-clip: text;
}

/* Subtitle line under title */
.pc-details p {
  font-weight: 600;
  position: relative;
  top: -8px;
  white-space: nowrap;
  font-size: clamp(var(--subtitle-min), var(--subtitle-pref-vw), var(--subtitle-max));
  margin: 0 auto;
  width: min-content;
  background-image: linear-gradient(to bottom, #000, #666);
  -webkit-text-fill-color: transparent;
  background-clip: text;
  -webkit-background-clip: text;
}

/* Be conservative with media queries. When changing card height, adjust these breakpoints */
@media (max-width: 1024px) {
  .pc-card { max-height: calc(var(--card-max-height) - 80px); }
  .pc-user-info { bottom: 16px; left: 16px; right: 16px; padding: 10px; }
  .pc-mini-avatar { width: 40px; height: 40px; }
}

@media (max-width: 768px) {
  /* mobile-friendly height adjustments */
  .pc-card { height: min(calc(var(--card-height-vh) - 18svh), calc(var(--card-max-height) - 120px)); max-height: calc(var(--card-max-height) - 120px); }
  .pc-details { top: 2em; }
  .pc-details h3 { font-size: clamp(1.1rem, 4.5vw, 2.3rem); }
  .pc-details p { font-size: 14px; top: -10px; }
  .pc-user-info { bottom: 14px; left: 14px; right: 14px; padding: 8px 10px; border-radius: 12px; }
  .pc-mini-avatar { width: 34px; height: 34px; }
  .pc-contact-btn { padding: 6px 10px; font-size: 12px; border-radius: 8px; }
  /* avatar cap for smaller screens */
  .pc-avatar-content .avatar { max-height: calc(var(--avatar-max-height) - 10vh); }
}

@media (max-width: 480px) {
  .pc-card { height: min(calc(var(--card-height-vh) - 24svh), calc(var(--card-max-height) - 160px)); max-height: calc(var(--card-max-height) - 160px); }
  .pc-details { top: 1.6em; }
  .pc-details h3 { font-size: clamp(1rem, 5vw, 1.9rem); }
  .pc-details p { font-size: 12px; top: -8px; }
  .pc-user-info { bottom: 12px; left: 12px; right: 12px; padding: 8px; border-radius: 12px; }
  .pc-mini-avatar { width: 30px; height: 30px; }
  .pc-contact-btn { padding: 5px 8px; font-size: 11px; border-radius: 10px; }
  .pc-avatar-content .avatar { max-height: calc(var(--avatar-max-height) - 16vh); }
}

/* Animations (no change needed) ------------------------------------*/
@keyframes glow-bg {
  0% { --bgrotate: 0deg; }
  100% { --bgrotate: 360deg; }
}

@keyframes holo-bg {
  0% { background-position: 0 var(--background-y), 0 0, center; }
  100% { background-position: 0 var(--background-y), 90% 90%, center; }
}